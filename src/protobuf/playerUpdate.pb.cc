// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: playerUpdate.proto

#include "playerUpdate.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// This is a temporary google only hack
#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
#include "third_party/protobuf/version.h"
#endif
// @@protoc_insertion_point(includes)

namespace protobuf_playerUpdate_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_playerUpdate_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_Point;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_playerUpdate_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_HitBox;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_playerUpdate_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_Unit;
}  // namespace protobuf_playerUpdate_2eproto
namespace gamemessages {
class UnitDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Unit>
      _instance;
} _Unit_default_instance_;
class PointDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Point>
      _instance;
} _Point_default_instance_;
class HitBoxDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<HitBox>
      _instance;
} _HitBox_default_instance_;
class PlayerUpdateDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<PlayerUpdate>
      _instance;
} _PlayerUpdate_default_instance_;
class PositionUpdateDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<PositionUpdate>
      _instance;
} _PositionUpdate_default_instance_;
class TestMessageDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<TestMessage>
      _instance;
} _TestMessage_default_instance_;
}  // namespace gamemessages
namespace protobuf_playerUpdate_2eproto {
static void InitDefaultsUnit() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::gamemessages::_Unit_default_instance_;
    new (ptr) ::gamemessages::Unit();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::gamemessages::Unit::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_Unit =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsUnit}, {
      &protobuf_playerUpdate_2eproto::scc_info_Point.base,}};

static void InitDefaultsPoint() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::gamemessages::_Point_default_instance_;
    new (ptr) ::gamemessages::Point();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::gamemessages::Point::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_Point =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsPoint}, {}};

static void InitDefaultsHitBox() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::gamemessages::_HitBox_default_instance_;
    new (ptr) ::gamemessages::HitBox();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::gamemessages::HitBox::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_HitBox =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsHitBox}, {
      &protobuf_playerUpdate_2eproto::scc_info_Point.base,}};

static void InitDefaultsPlayerUpdate() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::gamemessages::_PlayerUpdate_default_instance_;
    new (ptr) ::gamemessages::PlayerUpdate();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::gamemessages::PlayerUpdate::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_PlayerUpdate =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsPlayerUpdate}, {
      &protobuf_playerUpdate_2eproto::scc_info_Unit.base,}};

static void InitDefaultsPositionUpdate() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::gamemessages::_PositionUpdate_default_instance_;
    new (ptr) ::gamemessages::PositionUpdate();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::gamemessages::PositionUpdate::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<2> scc_info_PositionUpdate =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 2, InitDefaultsPositionUpdate}, {
      &protobuf_playerUpdate_2eproto::scc_info_Unit.base,
      &protobuf_playerUpdate_2eproto::scc_info_HitBox.base,}};

static void InitDefaultsTestMessage() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::gamemessages::_TestMessage_default_instance_;
    new (ptr) ::gamemessages::TestMessage();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::gamemessages::TestMessage::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_TestMessage =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsTestMessage}, {}};

void InitDefaults() {
  ::google::protobuf::internal::InitSCC(&scc_info_Unit.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Point.base);
  ::google::protobuf::internal::InitSCC(&scc_info_HitBox.base);
  ::google::protobuf::internal::InitSCC(&scc_info_PlayerUpdate.base);
  ::google::protobuf::internal::InitSCC(&scc_info_PositionUpdate.base);
  ::google::protobuf::internal::InitSCC(&scc_info_TestMessage.base);
}

::google::protobuf::Metadata file_level_metadata[6];

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::gamemessages::Unit, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::gamemessages::Unit, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::gamemessages::Unit, token_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::gamemessages::Unit, position_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::gamemessages::Unit, velocity_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::gamemessages::Unit, facing_),
  0,
  1,
  2,
  3,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::gamemessages::Point, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::gamemessages::Point, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::gamemessages::Point, x_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::gamemessages::Point, y_),
  0,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::gamemessages::HitBox, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::gamemessages::HitBox, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::gamemessages::HitBox, points_),
  ~0u,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::gamemessages::PlayerUpdate, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::gamemessages::PlayerUpdate, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::gamemessages::PlayerUpdate, player_),
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::gamemessages::PositionUpdate, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::gamemessages::PositionUpdate, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::gamemessages::PositionUpdate, players_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::gamemessages::PositionUpdate, mobs_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::gamemessages::PositionUpdate, hitboxes_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::gamemessages::PositionUpdate, mob_hitboxes_),
  ~0u,
  ~0u,
  ~0u,
  ~0u,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::gamemessages::TestMessage, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::gamemessages::TestMessage, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::gamemessages::TestMessage, test_),
  0,
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, 9, sizeof(::gamemessages::Unit)},
  { 13, 20, sizeof(::gamemessages::Point)},
  { 22, 28, sizeof(::gamemessages::HitBox)},
  { 29, 35, sizeof(::gamemessages::PlayerUpdate)},
  { 36, 45, sizeof(::gamemessages::PositionUpdate)},
  { 49, 55, sizeof(::gamemessages::TestMessage)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::gamemessages::_Unit_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::gamemessages::_Point_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::gamemessages::_HitBox_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::gamemessages::_PlayerUpdate_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::gamemessages::_PositionUpdate_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::gamemessages::_TestMessage_default_instance_),
};

void protobuf_AssignDescriptors() {
  AddDescriptors();
  AssignDescriptors(
      "playerUpdate.proto", schemas, file_default_instances, TableStruct::offsets,
      file_level_metadata, NULL, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_PROTOBUF_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 6);
}

void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n\022playerUpdate.proto\022\014gamemessages\"s\n\004Un"
      "it\022\r\n\005token\030\001 \002(\t\022%\n\010position\030\002 \002(\0132\023.ga"
      "memessages.Point\022%\n\010velocity\030\003 \002(\0132\023.gam"
      "emessages.Point\022\016\n\006facing\030\004 \002(\005\"\035\n\005Point"
      "\022\t\n\001x\030\001 \002(\003\022\t\n\001y\030\002 \002(\003\"-\n\006HitBox\022#\n\006poin"
      "ts\030\001 \003(\0132\023.gamemessages.Point\"2\n\014PlayerU"
      "pdate\022\"\n\006player\030\001 \002(\0132\022.gamemessages.Uni"
      "t\"\253\001\n\016PositionUpdate\022#\n\007players\030\001 \003(\0132\022."
      "gamemessages.Unit\022 \n\004mobs\030\002 \003(\0132\022.gameme"
      "ssages.Unit\022&\n\010hitboxes\030\003 \003(\0132\024.gamemess"
      "ages.HitBox\022*\n\014mob_hitboxes\030\004 \003(\0132\024.game"
      "messages.HitBox\"\033\n\013TestMessage\022\014\n\004test\030\001"
      " \002(\005"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 484);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "playerUpdate.proto", &protobuf_RegisterTypes);
}

void AddDescriptors() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;
}  // namespace protobuf_playerUpdate_2eproto
namespace gamemessages {

// ===================================================================

void Unit::InitAsDefaultInstance() {
  ::gamemessages::_Unit_default_instance_._instance.get_mutable()->position_ = const_cast< ::gamemessages::Point*>(
      ::gamemessages::Point::internal_default_instance());
  ::gamemessages::_Unit_default_instance_._instance.get_mutable()->velocity_ = const_cast< ::gamemessages::Point*>(
      ::gamemessages::Point::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Unit::kTokenFieldNumber;
const int Unit::kPositionFieldNumber;
const int Unit::kVelocityFieldNumber;
const int Unit::kFacingFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Unit::Unit()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_playerUpdate_2eproto::scc_info_Unit.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:gamemessages.Unit)
}
Unit::Unit(const Unit& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  token_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_token()) {
    token_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.token_);
  }
  if (from.has_position()) {
    position_ = new ::gamemessages::Point(*from.position_);
  } else {
    position_ = NULL;
  }
  if (from.has_velocity()) {
    velocity_ = new ::gamemessages::Point(*from.velocity_);
  } else {
    velocity_ = NULL;
  }
  facing_ = from.facing_;
  // @@protoc_insertion_point(copy_constructor:gamemessages.Unit)
}

void Unit::SharedCtor() {
  token_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&position_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&facing_) -
      reinterpret_cast<char*>(&position_)) + sizeof(facing_));
}

Unit::~Unit() {
  // @@protoc_insertion_point(destructor:gamemessages.Unit)
  SharedDtor();
}

void Unit::SharedDtor() {
  token_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete position_;
  if (this != internal_default_instance()) delete velocity_;
}

void Unit::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* Unit::descriptor() {
  ::protobuf_playerUpdate_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_playerUpdate_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Unit& Unit::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_playerUpdate_2eproto::scc_info_Unit.base);
  return *internal_default_instance();
}


void Unit::Clear() {
// @@protoc_insertion_point(message_clear_start:gamemessages.Unit)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 7u) {
    if (cached_has_bits & 0x00000001u) {
      token_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000002u) {
      GOOGLE_DCHECK(position_ != NULL);
      position_->Clear();
    }
    if (cached_has_bits & 0x00000004u) {
      GOOGLE_DCHECK(velocity_ != NULL);
      velocity_->Clear();
    }
  }
  facing_ = 0;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool Unit::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:gamemessages.Unit)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required string token = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_token()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->token().data(), static_cast<int>(this->token().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "gamemessages.Unit.token");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required .gamemessages.Point position = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_position()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required .gamemessages.Point velocity = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_velocity()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required int32 facing = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {
          set_has_facing();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &facing_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:gamemessages.Unit)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:gamemessages.Unit)
  return false;
#undef DO_
}

void Unit::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:gamemessages.Unit)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required string token = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->token().data(), static_cast<int>(this->token().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "gamemessages.Unit.token");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->token(), output);
  }

  // required .gamemessages.Point position = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->_internal_position(), output);
  }

  // required .gamemessages.Point velocity = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->_internal_velocity(), output);
  }

  // required int32 facing = 4;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->facing(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:gamemessages.Unit)
}

::google::protobuf::uint8* Unit::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:gamemessages.Unit)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required string token = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->token().data(), static_cast<int>(this->token().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "gamemessages.Unit.token");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->token(), target);
  }

  // required .gamemessages.Point position = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->_internal_position(), deterministic, target);
  }

  // required .gamemessages.Point velocity = 3;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, this->_internal_velocity(), deterministic, target);
  }

  // required int32 facing = 4;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->facing(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:gamemessages.Unit)
  return target;
}

size_t Unit::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:gamemessages.Unit)
  size_t total_size = 0;

  if (has_token()) {
    // required string token = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->token());
  }

  if (has_position()) {
    // required .gamemessages.Point position = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *position_);
  }

  if (has_velocity()) {
    // required .gamemessages.Point velocity = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *velocity_);
  }

  if (has_facing()) {
    // required int32 facing = 4;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->facing());
  }

  return total_size;
}
size_t Unit::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:gamemessages.Unit)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (((_has_bits_[0] & 0x0000000f) ^ 0x0000000f) == 0) {  // All required fields are present.
    // required string token = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->token());

    // required .gamemessages.Point position = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *position_);

    // required .gamemessages.Point velocity = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *velocity_);

    // required int32 facing = 4;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->facing());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Unit::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:gamemessages.Unit)
  GOOGLE_DCHECK_NE(&from, this);
  const Unit* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Unit>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:gamemessages.Unit)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:gamemessages.Unit)
    MergeFrom(*source);
  }
}

void Unit::MergeFrom(const Unit& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:gamemessages.Unit)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 15u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_token();
      token_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.token_);
    }
    if (cached_has_bits & 0x00000002u) {
      mutable_position()->::gamemessages::Point::MergeFrom(from.position());
    }
    if (cached_has_bits & 0x00000004u) {
      mutable_velocity()->::gamemessages::Point::MergeFrom(from.velocity());
    }
    if (cached_has_bits & 0x00000008u) {
      facing_ = from.facing_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void Unit::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:gamemessages.Unit)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Unit::CopyFrom(const Unit& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:gamemessages.Unit)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Unit::IsInitialized() const {
  if ((_has_bits_[0] & 0x0000000f) != 0x0000000f) return false;
  if (has_position()) {
    if (!this->position_->IsInitialized()) return false;
  }
  if (has_velocity()) {
    if (!this->velocity_->IsInitialized()) return false;
  }
  return true;
}

void Unit::Swap(Unit* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Unit::InternalSwap(Unit* other) {
  using std::swap;
  token_.Swap(&other->token_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(position_, other->position_);
  swap(velocity_, other->velocity_);
  swap(facing_, other->facing_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata Unit::GetMetadata() const {
  protobuf_playerUpdate_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_playerUpdate_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Point::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Point::kXFieldNumber;
const int Point::kYFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Point::Point()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_playerUpdate_2eproto::scc_info_Point.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:gamemessages.Point)
}
Point::Point(const Point& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&x_, &from.x_,
    static_cast<size_t>(reinterpret_cast<char*>(&y_) -
    reinterpret_cast<char*>(&x_)) + sizeof(y_));
  // @@protoc_insertion_point(copy_constructor:gamemessages.Point)
}

void Point::SharedCtor() {
  ::memset(&x_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&y_) -
      reinterpret_cast<char*>(&x_)) + sizeof(y_));
}

Point::~Point() {
  // @@protoc_insertion_point(destructor:gamemessages.Point)
  SharedDtor();
}

void Point::SharedDtor() {
}

void Point::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* Point::descriptor() {
  ::protobuf_playerUpdate_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_playerUpdate_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Point& Point::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_playerUpdate_2eproto::scc_info_Point.base);
  return *internal_default_instance();
}


void Point::Clear() {
// @@protoc_insertion_point(message_clear_start:gamemessages.Point)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 3u) {
    ::memset(&x_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&y_) -
        reinterpret_cast<char*>(&x_)) + sizeof(y_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool Point::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:gamemessages.Point)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int64 x = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_x();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &x_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required int64 y = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_y();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &y_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:gamemessages.Point)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:gamemessages.Point)
  return false;
#undef DO_
}

void Point::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:gamemessages.Point)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required int64 x = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(1, this->x(), output);
  }

  // required int64 y = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(2, this->y(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:gamemessages.Point)
}

::google::protobuf::uint8* Point::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:gamemessages.Point)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required int64 x = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(1, this->x(), target);
  }

  // required int64 y = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(2, this->y(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:gamemessages.Point)
  return target;
}

size_t Point::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:gamemessages.Point)
  size_t total_size = 0;

  if (has_x()) {
    // required int64 x = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->x());
  }

  if (has_y()) {
    // required int64 y = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->y());
  }

  return total_size;
}
size_t Point::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:gamemessages.Point)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (((_has_bits_[0] & 0x00000003) ^ 0x00000003) == 0) {  // All required fields are present.
    // required int64 x = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->x());

    // required int64 y = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->y());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Point::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:gamemessages.Point)
  GOOGLE_DCHECK_NE(&from, this);
  const Point* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Point>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:gamemessages.Point)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:gamemessages.Point)
    MergeFrom(*source);
  }
}

void Point::MergeFrom(const Point& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:gamemessages.Point)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      x_ = from.x_;
    }
    if (cached_has_bits & 0x00000002u) {
      y_ = from.y_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void Point::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:gamemessages.Point)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Point::CopyFrom(const Point& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:gamemessages.Point)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Point::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;
  return true;
}

void Point::Swap(Point* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Point::InternalSwap(Point* other) {
  using std::swap;
  swap(x_, other->x_);
  swap(y_, other->y_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata Point::GetMetadata() const {
  protobuf_playerUpdate_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_playerUpdate_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void HitBox::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int HitBox::kPointsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

HitBox::HitBox()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_playerUpdate_2eproto::scc_info_HitBox.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:gamemessages.HitBox)
}
HitBox::HitBox(const HitBox& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      points_(from.points_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:gamemessages.HitBox)
}

void HitBox::SharedCtor() {
}

HitBox::~HitBox() {
  // @@protoc_insertion_point(destructor:gamemessages.HitBox)
  SharedDtor();
}

void HitBox::SharedDtor() {
}

void HitBox::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* HitBox::descriptor() {
  ::protobuf_playerUpdate_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_playerUpdate_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const HitBox& HitBox::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_playerUpdate_2eproto::scc_info_HitBox.base);
  return *internal_default_instance();
}


void HitBox::Clear() {
// @@protoc_insertion_point(message_clear_start:gamemessages.HitBox)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  points_.Clear();
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool HitBox::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:gamemessages.HitBox)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .gamemessages.Point points = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_points()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:gamemessages.HitBox)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:gamemessages.HitBox)
  return false;
#undef DO_
}

void HitBox::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:gamemessages.HitBox)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .gamemessages.Point points = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->points_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1,
      this->points(static_cast<int>(i)),
      output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:gamemessages.HitBox)
}

::google::protobuf::uint8* HitBox::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:gamemessages.HitBox)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .gamemessages.Point points = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->points_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->points(static_cast<int>(i)), deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:gamemessages.HitBox)
  return target;
}

size_t HitBox::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:gamemessages.HitBox)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // repeated .gamemessages.Point points = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->points_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->points(static_cast<int>(i)));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void HitBox::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:gamemessages.HitBox)
  GOOGLE_DCHECK_NE(&from, this);
  const HitBox* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const HitBox>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:gamemessages.HitBox)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:gamemessages.HitBox)
    MergeFrom(*source);
  }
}

void HitBox::MergeFrom(const HitBox& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:gamemessages.HitBox)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  points_.MergeFrom(from.points_);
}

void HitBox::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:gamemessages.HitBox)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void HitBox::CopyFrom(const HitBox& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:gamemessages.HitBox)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool HitBox::IsInitialized() const {
  if (!::google::protobuf::internal::AllAreInitialized(this->points())) return false;
  return true;
}

void HitBox::Swap(HitBox* other) {
  if (other == this) return;
  InternalSwap(other);
}
void HitBox::InternalSwap(HitBox* other) {
  using std::swap;
  CastToBase(&points_)->InternalSwap(CastToBase(&other->points_));
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata HitBox::GetMetadata() const {
  protobuf_playerUpdate_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_playerUpdate_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void PlayerUpdate::InitAsDefaultInstance() {
  ::gamemessages::_PlayerUpdate_default_instance_._instance.get_mutable()->player_ = const_cast< ::gamemessages::Unit*>(
      ::gamemessages::Unit::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int PlayerUpdate::kPlayerFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PlayerUpdate::PlayerUpdate()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_playerUpdate_2eproto::scc_info_PlayerUpdate.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:gamemessages.PlayerUpdate)
}
PlayerUpdate::PlayerUpdate(const PlayerUpdate& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_player()) {
    player_ = new ::gamemessages::Unit(*from.player_);
  } else {
    player_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:gamemessages.PlayerUpdate)
}

void PlayerUpdate::SharedCtor() {
  player_ = NULL;
}

PlayerUpdate::~PlayerUpdate() {
  // @@protoc_insertion_point(destructor:gamemessages.PlayerUpdate)
  SharedDtor();
}

void PlayerUpdate::SharedDtor() {
  if (this != internal_default_instance()) delete player_;
}

void PlayerUpdate::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* PlayerUpdate::descriptor() {
  ::protobuf_playerUpdate_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_playerUpdate_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const PlayerUpdate& PlayerUpdate::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_playerUpdate_2eproto::scc_info_PlayerUpdate.base);
  return *internal_default_instance();
}


void PlayerUpdate::Clear() {
// @@protoc_insertion_point(message_clear_start:gamemessages.PlayerUpdate)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    GOOGLE_DCHECK(player_ != NULL);
    player_->Clear();
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool PlayerUpdate::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:gamemessages.PlayerUpdate)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .gamemessages.Unit player = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_player()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:gamemessages.PlayerUpdate)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:gamemessages.PlayerUpdate)
  return false;
#undef DO_
}

void PlayerUpdate::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:gamemessages.PlayerUpdate)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required .gamemessages.Unit player = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_player(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:gamemessages.PlayerUpdate)
}

::google::protobuf::uint8* PlayerUpdate::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:gamemessages.PlayerUpdate)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required .gamemessages.Unit player = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_player(), deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:gamemessages.PlayerUpdate)
  return target;
}

size_t PlayerUpdate::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:gamemessages.PlayerUpdate)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // required .gamemessages.Unit player = 1;
  if (has_player()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *player_);
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void PlayerUpdate::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:gamemessages.PlayerUpdate)
  GOOGLE_DCHECK_NE(&from, this);
  const PlayerUpdate* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const PlayerUpdate>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:gamemessages.PlayerUpdate)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:gamemessages.PlayerUpdate)
    MergeFrom(*source);
  }
}

void PlayerUpdate::MergeFrom(const PlayerUpdate& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:gamemessages.PlayerUpdate)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_player()) {
    mutable_player()->::gamemessages::Unit::MergeFrom(from.player());
  }
}

void PlayerUpdate::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:gamemessages.PlayerUpdate)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PlayerUpdate::CopyFrom(const PlayerUpdate& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:gamemessages.PlayerUpdate)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PlayerUpdate::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;
  if (has_player()) {
    if (!this->player_->IsInitialized()) return false;
  }
  return true;
}

void PlayerUpdate::Swap(PlayerUpdate* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PlayerUpdate::InternalSwap(PlayerUpdate* other) {
  using std::swap;
  swap(player_, other->player_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata PlayerUpdate::GetMetadata() const {
  protobuf_playerUpdate_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_playerUpdate_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void PositionUpdate::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int PositionUpdate::kPlayersFieldNumber;
const int PositionUpdate::kMobsFieldNumber;
const int PositionUpdate::kHitboxesFieldNumber;
const int PositionUpdate::kMobHitboxesFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PositionUpdate::PositionUpdate()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_playerUpdate_2eproto::scc_info_PositionUpdate.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:gamemessages.PositionUpdate)
}
PositionUpdate::PositionUpdate(const PositionUpdate& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      players_(from.players_),
      mobs_(from.mobs_),
      hitboxes_(from.hitboxes_),
      mob_hitboxes_(from.mob_hitboxes_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:gamemessages.PositionUpdate)
}

void PositionUpdate::SharedCtor() {
}

PositionUpdate::~PositionUpdate() {
  // @@protoc_insertion_point(destructor:gamemessages.PositionUpdate)
  SharedDtor();
}

void PositionUpdate::SharedDtor() {
}

void PositionUpdate::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* PositionUpdate::descriptor() {
  ::protobuf_playerUpdate_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_playerUpdate_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const PositionUpdate& PositionUpdate::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_playerUpdate_2eproto::scc_info_PositionUpdate.base);
  return *internal_default_instance();
}


void PositionUpdate::Clear() {
// @@protoc_insertion_point(message_clear_start:gamemessages.PositionUpdate)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  players_.Clear();
  mobs_.Clear();
  hitboxes_.Clear();
  mob_hitboxes_.Clear();
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool PositionUpdate::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:gamemessages.PositionUpdate)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .gamemessages.Unit players = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_players()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .gamemessages.Unit mobs = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_mobs()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .gamemessages.HitBox hitboxes = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_hitboxes()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .gamemessages.HitBox mob_hitboxes = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_mob_hitboxes()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:gamemessages.PositionUpdate)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:gamemessages.PositionUpdate)
  return false;
#undef DO_
}

void PositionUpdate::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:gamemessages.PositionUpdate)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .gamemessages.Unit players = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->players_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1,
      this->players(static_cast<int>(i)),
      output);
  }

  // repeated .gamemessages.Unit mobs = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->mobs_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2,
      this->mobs(static_cast<int>(i)),
      output);
  }

  // repeated .gamemessages.HitBox hitboxes = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->hitboxes_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3,
      this->hitboxes(static_cast<int>(i)),
      output);
  }

  // repeated .gamemessages.HitBox mob_hitboxes = 4;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->mob_hitboxes_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4,
      this->mob_hitboxes(static_cast<int>(i)),
      output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:gamemessages.PositionUpdate)
}

::google::protobuf::uint8* PositionUpdate::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:gamemessages.PositionUpdate)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .gamemessages.Unit players = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->players_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->players(static_cast<int>(i)), deterministic, target);
  }

  // repeated .gamemessages.Unit mobs = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->mobs_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->mobs(static_cast<int>(i)), deterministic, target);
  }

  // repeated .gamemessages.HitBox hitboxes = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->hitboxes_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, this->hitboxes(static_cast<int>(i)), deterministic, target);
  }

  // repeated .gamemessages.HitBox mob_hitboxes = 4;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->mob_hitboxes_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        4, this->mob_hitboxes(static_cast<int>(i)), deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:gamemessages.PositionUpdate)
  return target;
}

size_t PositionUpdate::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:gamemessages.PositionUpdate)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // repeated .gamemessages.Unit players = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->players_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->players(static_cast<int>(i)));
    }
  }

  // repeated .gamemessages.Unit mobs = 2;
  {
    unsigned int count = static_cast<unsigned int>(this->mobs_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->mobs(static_cast<int>(i)));
    }
  }

  // repeated .gamemessages.HitBox hitboxes = 3;
  {
    unsigned int count = static_cast<unsigned int>(this->hitboxes_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->hitboxes(static_cast<int>(i)));
    }
  }

  // repeated .gamemessages.HitBox mob_hitboxes = 4;
  {
    unsigned int count = static_cast<unsigned int>(this->mob_hitboxes_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->mob_hitboxes(static_cast<int>(i)));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void PositionUpdate::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:gamemessages.PositionUpdate)
  GOOGLE_DCHECK_NE(&from, this);
  const PositionUpdate* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const PositionUpdate>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:gamemessages.PositionUpdate)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:gamemessages.PositionUpdate)
    MergeFrom(*source);
  }
}

void PositionUpdate::MergeFrom(const PositionUpdate& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:gamemessages.PositionUpdate)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  players_.MergeFrom(from.players_);
  mobs_.MergeFrom(from.mobs_);
  hitboxes_.MergeFrom(from.hitboxes_);
  mob_hitboxes_.MergeFrom(from.mob_hitboxes_);
}

void PositionUpdate::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:gamemessages.PositionUpdate)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PositionUpdate::CopyFrom(const PositionUpdate& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:gamemessages.PositionUpdate)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PositionUpdate::IsInitialized() const {
  if (!::google::protobuf::internal::AllAreInitialized(this->players())) return false;
  if (!::google::protobuf::internal::AllAreInitialized(this->mobs())) return false;
  if (!::google::protobuf::internal::AllAreInitialized(this->hitboxes())) return false;
  if (!::google::protobuf::internal::AllAreInitialized(this->mob_hitboxes())) return false;
  return true;
}

void PositionUpdate::Swap(PositionUpdate* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PositionUpdate::InternalSwap(PositionUpdate* other) {
  using std::swap;
  CastToBase(&players_)->InternalSwap(CastToBase(&other->players_));
  CastToBase(&mobs_)->InternalSwap(CastToBase(&other->mobs_));
  CastToBase(&hitboxes_)->InternalSwap(CastToBase(&other->hitboxes_));
  CastToBase(&mob_hitboxes_)->InternalSwap(CastToBase(&other->mob_hitboxes_));
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata PositionUpdate::GetMetadata() const {
  protobuf_playerUpdate_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_playerUpdate_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void TestMessage::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int TestMessage::kTestFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TestMessage::TestMessage()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_playerUpdate_2eproto::scc_info_TestMessage.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:gamemessages.TestMessage)
}
TestMessage::TestMessage(const TestMessage& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  test_ = from.test_;
  // @@protoc_insertion_point(copy_constructor:gamemessages.TestMessage)
}

void TestMessage::SharedCtor() {
  test_ = 0;
}

TestMessage::~TestMessage() {
  // @@protoc_insertion_point(destructor:gamemessages.TestMessage)
  SharedDtor();
}

void TestMessage::SharedDtor() {
}

void TestMessage::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* TestMessage::descriptor() {
  ::protobuf_playerUpdate_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_playerUpdate_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const TestMessage& TestMessage::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_playerUpdate_2eproto::scc_info_TestMessage.base);
  return *internal_default_instance();
}


void TestMessage::Clear() {
// @@protoc_insertion_point(message_clear_start:gamemessages.TestMessage)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  test_ = 0;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool TestMessage::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:gamemessages.TestMessage)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 test = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_test();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &test_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:gamemessages.TestMessage)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:gamemessages.TestMessage)
  return false;
#undef DO_
}

void TestMessage::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:gamemessages.TestMessage)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required int32 test = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->test(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:gamemessages.TestMessage)
}

::google::protobuf::uint8* TestMessage::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:gamemessages.TestMessage)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required int32 test = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->test(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:gamemessages.TestMessage)
  return target;
}

size_t TestMessage::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:gamemessages.TestMessage)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // required int32 test = 1;
  if (has_test()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->test());
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void TestMessage::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:gamemessages.TestMessage)
  GOOGLE_DCHECK_NE(&from, this);
  const TestMessage* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const TestMessage>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:gamemessages.TestMessage)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:gamemessages.TestMessage)
    MergeFrom(*source);
  }
}

void TestMessage::MergeFrom(const TestMessage& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:gamemessages.TestMessage)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_test()) {
    set_test(from.test());
  }
}

void TestMessage::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:gamemessages.TestMessage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TestMessage::CopyFrom(const TestMessage& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:gamemessages.TestMessage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TestMessage::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;
  return true;
}

void TestMessage::Swap(TestMessage* other) {
  if (other == this) return;
  InternalSwap(other);
}
void TestMessage::InternalSwap(TestMessage* other) {
  using std::swap;
  swap(test_, other->test_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata TestMessage::GetMetadata() const {
  protobuf_playerUpdate_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_playerUpdate_2eproto::file_level_metadata[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace gamemessages
namespace google {
namespace protobuf {
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::gamemessages::Unit* Arena::CreateMaybeMessage< ::gamemessages::Unit >(Arena* arena) {
  return Arena::CreateInternal< ::gamemessages::Unit >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::gamemessages::Point* Arena::CreateMaybeMessage< ::gamemessages::Point >(Arena* arena) {
  return Arena::CreateInternal< ::gamemessages::Point >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::gamemessages::HitBox* Arena::CreateMaybeMessage< ::gamemessages::HitBox >(Arena* arena) {
  return Arena::CreateInternal< ::gamemessages::HitBox >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::gamemessages::PlayerUpdate* Arena::CreateMaybeMessage< ::gamemessages::PlayerUpdate >(Arena* arena) {
  return Arena::CreateInternal< ::gamemessages::PlayerUpdate >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::gamemessages::PositionUpdate* Arena::CreateMaybeMessage< ::gamemessages::PositionUpdate >(Arena* arena) {
  return Arena::CreateInternal< ::gamemessages::PositionUpdate >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::gamemessages::TestMessage* Arena::CreateMaybeMessage< ::gamemessages::TestMessage >(Arena* arena) {
  return Arena::CreateInternal< ::gamemessages::TestMessage >(arena);
}
}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)
